import glob from 'glob';
import * as fs from 'fs';
import { default as scramjet } from 'scramjet';
const { StringStream } = scramjet;

// Using relations
import * as parser from './using_relations.js';

async function getUsingRelationsFromFile(file_path) {
  if(file_path.includes('global.cs'))  {
    return null;
  }

  const lines = [];

  const stream = StringStream
    .pipeline(fs.createReadStream(file_path))
    .lines()
    .while(line => {
      lines.push(line.trim());
      return !line.startsWith('namespace');
    });

  await stream.run();

  const result = parser.parse(lines.join('\n'));

  return `%% ${file_path}
${result}
`;
}

glob("**/*.cs", {}, async (err, files) => {
  const processed = await Promise.all(
    files.map(getUsingRelationsFromFile).filter(Boolean)
  );

  fs.writeFileSync(
    'using_relations.md',
    `classDiagram
direction LR

%% Generated by il2cppdump-mermaid
%% Author - [Houdou](https://github.com/Houdou)


`+
    processed.join('\n'),
    'utf8'
  );
});
